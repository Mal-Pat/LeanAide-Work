{
  "document": [
    {
      "type": "Definition",
      "label": "def:odd_integer",
      "header": "Definition",
      "definition": "For x ∈ ℤ, odd(x) ↔ ∃ u ∈ ℤ such that x = 2 u + 1."
    },
    {
      "type": "Theorem",
      "label": "thm:odd_product",
      "header": "Theorem",
      "claim": "∀ m, n ∈ ℤ, odd(m) ∧ odd(n) ⇒ odd(m·n)",
      "proof": {
        "type": "Proof",
        "claim_label": "thm:odd_product",
        "proof_steps": [
          [
            {
              "type": "let_statement",
              "variable_name": "m, n",
              "variable_type": "ℤ",
              "statement": "Introduce m, n ∈ ℤ."
            },
            {
              "type": "assume_statement",
              "assumption": "odd(m)",
              "label": "H1"
            },
            {
              "type": "assume_statement",
              "assumption": "odd(n)",
              "label": "H2"
            },
            {
              "type": "assert_statement",
              "claim": "∃ k ∈ ℤ such that m = 2 k + 1",
              "label": "E1",
              "results_used": [
                {
                  "statement": "Definition of odd integer",
                  "target_identifier": "def:odd_integer"
                }
              ]
            },
            {
              "type": "assert_statement",
              "claim": "∃ l ∈ ℤ such that n = 2 l + 1",
              "label": "E2",
              "results_used": [
                {
                  "statement": "Definition of odd integer",
                  "target_identifier": "def:odd_integer"
                }
              ]
            },
            {
              "type": "let_statement",
              "variable_name": "k",
              "variable_type": "ℤ",
              "statement": "From E1 choose k ∈ ℤ with m = 2 k + 1."
            },
            {
              "type": "let_statement",
              "variable_name": "l",
              "variable_type": "ℤ",
              "statement": "From E2 choose l ∈ ℤ with n = 2 l + 1."
            },
            {
              "calculation_sequence": [
                "m·n = (2 k + 1)(2 l + 1)",
                "= 4 k l + 2 k + 2 l + 1"
              ]
            },
            {
              "type": "let_statement",
              "variable_name": "t",
              "statement": "Define t = 2 k l + k + l."
            },
            {
              "type": "assert_statement",
              "claim": "t ∈ ℤ",
              "proof_method": "By closure of ℤ under addition and multiplication"
            },
            {
              "calculation_sequence": [
                "4 k l + 2 k + 2 l + 1 = 2(2 k l + k + l) + 1",
                "= 2 t + 1"
              ]
            },
            {
              "type": "assert_statement",
              "claim": "odd(m·n)",
              "proof_method": "By definition of odd integer",
              "results_used": [
                {
                  "statement": "Definition of odd integer",
                  "target_identifier": "def:odd_integer"
                }
              ]
            }
          ]
        ]
      }
    }
  ]
}