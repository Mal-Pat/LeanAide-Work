{
  "top_code": "import Mathlib\nuniverse u v w u_1 u_2 u_3 u\u2081 u\u2082 u\u2083\nset_option maxHeartbeats 10000000\nset_option linter.unreachableTactic false\n",
  "task": "lean_from_json_structured",
  "result": "success",
  "lean_code": "  def isOdd (n : \u2124) : Prop :=\n    \u2203 k : \u2124, n = 2 * k + 1\n  theorem odd_mul_odd : \u2200 {m n : \u2124}, Odd m \u2192 Odd n \u2192 Odd (m * n) :=\n    by\n    intro m n\n    exact fun a a_1 => Odd.mul a a_1",
  "json_structured": {
    "document": [
      {
        "type": "Definition",
        "label": "def:odd_integer",
        "header": "Definition",
        "definition": "An integer n is odd precisely if there exists an integer k such that n = 2k + 1."
      },
      {
        "type": "Theorem",
        "proof": {
          "type": "Proof",
          "proof_steps": [
            {
              "type": "LogicalStepSequence",
              "items": [
                {
                  "type": "assert_statement",
                  "results_used": [
                    {
                      "target_identifier": "def:odd_integer",
                      "statement": "Definition of an odd integer."
                    }
                  ],
                  "internal_references": [
                    {
                      "target_identifier": "def:odd_integer"
                    }
                  ],
                  "claim": "There exists k\u2081 \u2208 \u2124 such that m = 2k\u2081 + 1."
                },
                {
                  "type": "assert_statement",
                  "results_used": [
                    {
                      "target_identifier": "def:odd_integer",
                      "statement": "Definition of an odd integer."
                    }
                  ],
                  "internal_references": [
                    {
                      "target_identifier": "def:odd_integer"
                    }
                  ],
                  "claim": "There exists k\u2082 \u2208 \u2124 such that n = 2k\u2082 + 1."
                },
                {
                  "variable_name": "p",
                  "value": "m\u00b7n",
                  "type": "let_statement",
                  "statement": "Define p = m\u00b7n."
                },
                {
                  "type": "assert_statement",
                  "claim": "p can be expressed in the form 2s + 1 for some integer s.",
                  "calculation": {
                    "calculation_sequence": [
                      "p = (2k\u2081 + 1)(2k\u2082 + 1)",
                      "p = 4k\u2081k\u2082 + 2k\u2081 + 2k\u2082 + 1",
                      "p = 2(2k\u2081k\u2082 + k\u2081 + k\u2082) + 1"
                    ]
                  }
                },
                {
                  "variable_name": "s",
                  "value": "2k\u2081k\u2082 + k\u2081 + k\u2082",
                  "type": "let_statement",
                  "statement": "Define s = 2k\u2081k\u2082 + k\u2081 + k\u2082."
                },
                {
                  "type": "assert_statement",
                  "proof_method": "Closure of integers under multiplication and addition.",
                  "claim": "s is an integer."
                },
                {
                  "type": "conclude_statement",
                  "claim": "p is odd."
                }
              ]
            }
          ],
          "claim_label": "thm:product_of_odds"
        },
        "label": "thm:product_of_odds",
        "hypothesis": [
          {
            "type": "assume_statement",
            "assumption": "m is an odd integer"
          },
          {
            "type": "assume_statement",
            "assumption": "n is an odd integer"
          }
        ],
        "header": "Theorem",
        "claim": "m\u00b7n is odd."
      }
    ]
  },
  "greedy": false,
  "declarations": [
    "isOdd",
    "odd_mul_odd"
  ]
}