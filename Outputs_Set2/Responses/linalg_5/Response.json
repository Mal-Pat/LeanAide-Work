{
  "top_code": "import Mathlib\nimport LeanAide.AutoTactic\nimport LeanAide.Syntax\nuniverse u v w u_1 u_2 u_3 u\u2081 u\u2082 u\u2083\nset_option maxHeartbeats 10000000\nset_option linter.unreachableTactic false\n",
  "task": "lean_from_json_structured",
  "result": "success",
  "lean_code": "  example :=\n    \"Error: codegen: no valid function found for key definition in JSON object {\\\"label\\\": \\\"def:euclidean_norm\\\",\\n \\\"header\\\": \\\"Definition\\\",\\n \\\"definition\\\":\\n \\\"For a vector `v` in an n-dimensional real vector space, represented as `v = (v_1, v_2, ..., v_n)` (where `v_i` are real numbers), the Euclidean norm (or L2 norm) of `v` is defined as `\u2225v\u2225 = sqrt(v_1^2 + v_2^2 + ... + v_n^2)`.\\\"}; tried: [LeanAide.defCode: codegen: no definition translation found for For a vector `v` in an n-dimensional real vector space, represented as `v = (v_1, v_2, ..., v_n)` (where `v_i` are real numbers), the Euclidean norm (or L2 norm) of `v` is defined as `\u2225v\u2225 = sqrt(v_1^2 + v_2^2 + ... + v_n^2)`.]\"\n  def scalar_multiple {n : \u2115} (c : \u211d) (v : Fin n \u2192 \u211d) : Fin n \u2192 \u211d := fun i => c * v i\n  abbrev RealVectorSpace.norm_smul.prop : Prop :=\n    \u2200 {V : Type u_1} [inst : NormedAddCommGroup V] [inst_1 : NormedSpace \u211d V] (c : \u211d) (v : V), \u2016c \u2022 v\u2016 = |c| * \u2016v\u2016\n  theorem RealVectorSpace.norm_smul :\n      \u2200 {V : Type u_1} [inst : NormedAddCommGroup V] [inst_1 : NormedSpace \u211d V] (c : \u211d) (v : V), \u2016c \u2022 v\u2016 = |c| * \u2016v\u2016 :=\n    by\n    intro inst inst_1 c v\n    sorry",
  "json_structured": {
    "document": [
      {
        "type": "Definition",
        "label": "def:euclidean_norm",
        "header": "Definition",
        "definition": "For a vector `v` in an n-dimensional real vector space, represented as `v = (v_1, v_2, ..., v_n)` (where `v_i` are real numbers), the Euclidean norm (or L2 norm) of `v` is defined as `\u2225v\u2225 = sqrt(v_1^2 + v_2^2 + ... + v_n^2)`."
      },
      {
        "type": "Definition",
        "label": "def:scalar_multiplication",
        "header": "Definition",
        "definition": "For a scalar `c` (a real number) and a vector `v = (v_1, v_2, ..., v_n)`, the scalar multiple `c * v` is defined as `(c * v_1, c * v_2, ..., c * v_n)`."
      },
      {
        "type": "Theorem",
        "label": "thm:norm_scalar_multiple",
        "hypothesis": [
          {
            "variable_type": "vector",
            "variable_name": "v",
            "type": "let_statement",
            "properties": "an arbitrary vector in a real vector space, `v = (v_1, v_2, ..., v_n)`"
          },
          {
            "variable_type": "real number",
            "variable_name": "c",
            "type": "let_statement",
            "properties": "an arbitrary scalar"
          }
        ],
        "header": "Theorem",
        "claim": "The norm of the scalar multiple `c * v` is equal to the absolute value of the scalar `c` multiplied by the norm of the vector `v` (i.e., `\u2225c * v\u2225 = |c| * \u2225v\u2225`)."
      },
      {
        "type": "Proof",
        "proof_steps": [
          {
            "type": "LogicalStepSequence",
            "items": [
              {
                "variable_type": "vector",
                "variable_name": "v",
                "type": "let_statement",
                "properties": "Let `v = (v_1, v_2, ..., v_n)` be an arbitrary vector in a real vector space."
              },
              {
                "variable_type": "real number",
                "variable_name": "c",
                "type": "let_statement",
                "properties": "Let `c` be an arbitrary scalar (a real number)."
              }
            ]
          },
          {
            "type": "LogicalStepSequence",
            "items": [
              {
                "type": "assert_statement",
                "results_used": [
                  {
                    "target_identifier": "def:scalar_multiplication",
                    "statement": "Definition of scalar multiplication"
                  }
                ],
                "label": "step:scalar_mult_components",
                "claim": "First, we determine the components of the scalar multiple `c * v`.",
                "calculation": {
                  "inline_calculation": "c * v = (c*v_1, c*v_2, ..., c*v_n)"
                }
              }
            ]
          },
          {
            "type": "LogicalStepSequence",
            "items": [
              {
                "type": "assert_statement",
                "results_used": [
                  {
                    "target_identifier": "def:euclidean_norm",
                    "statement": "Definition of Euclidean norm"
                  },
                  {
                    "target_identifier": "step:scalar_mult_components",
                    "statement": "Components of `c*v`"
                  }
                ],
                "label": "step:apply_norm_def",
                "claim": "Now, we apply the definition of the Euclidean norm to the vector `c * v`.",
                "calculation": {
                  "inline_calculation": "\u2225c * v\u2225 = sqrt((c*v_1)^2 + (c*v_2)^2 + ... + (c*v_n)^2)"
                }
              }
            ]
          },
          {
            "type": "LogicalStepSequence",
            "items": [
              {
                "type": "assert_statement",
                "results_used": [
                  {
                    "statement": "Property of real numbers: `(xy)^2 = x^2 y^2`"
                  },
                  {
                    "target_identifier": "step:apply_norm_def",
                    "statement": "Expression for `\u2225c*v\u2225`"
                  }
                ],
                "label": "step:square_product_property",
                "claim": "Using the algebraic property that for any real numbers `x` and `y`, `(xy)^2 = x^2 y^2`, we can expand each term inside the square root.",
                "calculation": {
                  "inline_calculation": "\u2225c * v\u2225 = sqrt(c^2 * v_1^2 + c^2 * v_2^2 + ... + c^2 * v_n^2)"
                }
              }
            ]
          },
          {
            "type": "LogicalStepSequence",
            "items": [
              {
                "type": "assert_statement",
                "results_used": [
                  {
                    "statement": "Distributive property of multiplication over addition"
                  },
                  {
                    "statement": "Expression from step:square_product_property"
                  }
                ],
                "label": "step:factor_c_squared",
                "claim": "Factor out `c^2` from each term under the square root.",
                "calculation": {
                  "inline_calculation": "\u2225c * v\u2225 = sqrt(c^2 * (v_1^2 + v_2^2 + ... + v_n^2))"
                }
              }
            ]
          },
          {
            "type": "LogicalStepSequence",
            "items": [
              {
                "type": "assert_statement",
                "results_used": [
                  {
                    "statement": "Property of square roots: `sqrt(xy) = sqrt(x) * sqrt(y)`"
                  },
                  {
                    "statement": "Expression from step:factor_c_squared"
                  }
                ],
                "label": "step:sqrt_product_property",
                "claim": "Using the property of square roots that `sqrt(xy) = sqrt(x) * sqrt(y)` for non-negative `x` and `y`, we can separate `c^2`.",
                "calculation": {
                  "inline_calculation": "\u2225c * v\u2225 = sqrt(c^2) * sqrt(v_1^2 + v_2^2 + ... + v_n^2)"
                }
              }
            ]
          },
          {
            "type": "LogicalStepSequence",
            "items": [
              {
                "type": "assert_statement",
                "results_used": [
                  {
                    "statement": "Definition of absolute value: `|x| = sqrt(x^2)`"
                  }
                ],
                "label": "step:sqrt_c_squared",
                "claim": "By the definition of absolute value, `sqrt(c^2) = |c|`."
              }
            ]
          },
          {
            "type": "LogicalStepSequence",
            "items": [
              {
                "type": "assert_statement",
                "results_used": [
                  {
                    "target_identifier": "def:euclidean_norm",
                    "statement": "Definition of Euclidean norm"
                  }
                ],
                "label": "step:recognize_norm_v",
                "claim": "The term `sqrt(v_1^2 + v_2^2 + ... + v_n^2)` is precisely the definition of the norm of vector `v`.",
                "calculation": {
                  "inline_calculation": "sqrt(v_1^2 + v_2^2 + ... + v_n^2) = \u2225v\u2225"
                }
              }
            ]
          },
          {
            "type": "LogicalStepSequence",
            "items": [
              {
                "type": "conclude_statement",
                "claim": "Substituting the results from step:sqrt_c_squared and step:recognize_norm_v into the expression from step:sqrt_product_property, we get `\u2225c * v\u2225 = |c| * \u2225v\u2225`. This completes the proof."
              }
            ]
          }
        ],
        "claim_label": "thm:norm_scalar_multiple"
      }
    ]
  },
  "greedy": false,
  "declarations": [
    "scalar_multiple",
    "RealVectorSpace.norm_smul"
  ]
}