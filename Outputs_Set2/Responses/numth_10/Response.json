{
  "top_code": "import Mathlib\nimport LeanAide.AutoTactic\nimport LeanAide.Syntax\nuniverse u v w u_1 u_2 u_3 u\u2081 u\u2082 u\u2083\nset_option maxHeartbeats 10000000\nset_option linter.unreachableTactic false\n",
  "task": "lean_from_json_structured",
  "result": "success",
  "lean_code": "  def Int.dvd : \u2124 \u2192 \u2124 \u2192 Prop := fun x y => \u2203 k : \u2124, y = x * k\n  abbrev Int.dvd_of_abs_le_of_dvd.prop : Prop :=\n    \u2200 {a b : \u2124}, a \u2223 b \u2192 b \u2260 0 \u2192 Int.natAbs a \u2264 Int.natAbs b\n  theorem Int.dvd_of_abs_le_of_dvd : \u2200 {a b : \u2124}, a \u2223 b \u2192 b \u2260 0 \u2192 Int.natAbs a \u2264 Int.natAbs b :=\n    by\n    intro b a_1 a_2\n    simp_all only [ne_eq]\n    sorry",
  "json_structured": {
    "document": [
      {
        "type": "Definition",
        "label": "def:divisibility",
        "header": "Definition",
        "definition": "An integer `x` divides an integer `y` (denoted `x | y`) if and only if there exists an integer `k` such that `y = xk`."
      },
      {
        "type": "Theorem",
        "label": "thm:divisor_magnitude",
        "hypothesis": [
          {
            "variable_type": "integer",
            "variable_name": "a",
            "type": "let_statement",
            "properties": "an integer"
          },
          {
            "variable_type": "integer",
            "variable_name": "b",
            "type": "let_statement",
            "properties": "an integer"
          },
          {
            "type": "assume_statement",
            "assumption": "`a` divides `b` (a | b)"
          },
          {
            "type": "assume_statement",
            "assumption": "`b` is not equal to 0 (b \u2260 0)"
          }
        ],
        "header": "Theorem",
        "claim": "The absolute value of `a` is less than or equal to the absolute value of `b` (|a| \u2264 |b|)."
      },
      {
        "type": "Proof",
        "proof_steps": [
          {
            "type": "LogicalStepSequence",
            "items": [
              {
                "variable_type": "integer",
                "variable_name": "a",
                "type": "let_statement",
                "properties": "Let `a` be an arbitrary integer."
              },
              {
                "variable_type": "integer",
                "variable_name": "b",
                "type": "let_statement",
                "properties": "Let `b` be an arbitrary integer."
              },
              {
                "type": "assume_statement",
                "label": "hyp:a_div_b",
                "assumption": "`a | b`"
              },
              {
                "type": "assume_statement",
                "label": "hyp:b_nonzero",
                "assumption": "`b \u2260 0`"
              }
            ]
          },
          {
            "type": "LogicalStepSequence",
            "items": [
              {
                "type": "assert_statement",
                "results_used": [
                  {
                    "statement": "If `a = 0`, then `a | b` implies `b = 0 * k = 0` for any integer `k`. This contradicts our hypothesis that `b \u2260 0` (hyp:b_nonzero). Therefore, `a` cannot be 0."
                  }
                ],
                "proof_method": "proof by contradiction",
                "label": "step:a_nonzero",
                "claim": "`a` must be non-zero (a \u2260 0)."
              }
            ]
          },
          {
            "type": "LogicalStepSequence",
            "items": [
              {
                "variable_name": "k",
                "variable_kind": "integer",
                "type": "some_statement",
                "results_used": [
                  {
                    "target_identifier": "def:divisibility",
                    "statement": "By the definition of divisibility (def:divisibility)"
                  }
                ],
                "properties": "such that `b = ak`.",
                "internal_references": [
                  {
                    "target_identifier": "hyp:a_div_b"
                  }
                ]
              }
            ]
          },
          {
            "type": "LogicalStepSequence",
            "items": [
              {
                "type": "assert_statement",
                "results_used": [
                  {
                    "statement": "Since `b = ak` and we know `b \u2260 0` (hyp:b_nonzero) and `a \u2260 0` (step:a_nonzero), it must be that `k \u2260 0` for the product `ak` to be non-zero."
                  }
                ],
                "proof_method": "deduction from previous steps",
                "label": "step:k_nonzero",
                "claim": "`k` must be non-zero (k \u2260 0)."
              }
            ]
          },
          {
            "type": "LogicalStepSequence",
            "items": [
              {
                "type": "assert_statement",
                "proof_method": "property of integers",
                "label": "step:abs_k_ge_1",
                "claim": "Since `k` is a non-zero integer, its absolute value must be greater than or equal to 1 (|k| \u2265 1)."
              }
            ]
          },
          {
            "type": "LogicalStepSequence",
            "items": [
              {
                "type": "assert_statement",
                "label": "step:abs_eq",
                "claim": "Taking the absolute value of both sides of the equation `b = ak` gives `|b| = |ak|`.",
                "calculation": {
                  "inline_calculation": "|b| = |ak|"
                }
              },
              {
                "type": "assert_statement",
                "results_used": [
                  {
                    "statement": "Property of absolute values: |xy| = |x||y|"
                  }
                ],
                "label": "step:abs_product",
                "internal_references": [
                  {
                    "target_identifier": "step:abs_eq"
                  }
                ],
                "claim": "Using the property of absolute values that `|xy| = |x||y|`, we have `|ak| = |a||k|`.",
                "calculation": {
                  "inline_calculation": "|b| = |a||k|"
                }
              }
            ]
          },
          {
            "type": "LogicalStepSequence",
            "items": [
              {
                "type": "assert_statement",
                "results_used": [
                  {
                    "statement": "Multiplication property of inequalities"
                  },
                  {
                    "target_identifier": "step:abs_k_ge_1",
                    "statement": "|k| \u2265 1"
                  }
                ],
                "label": "step:final_ineq",
                "claim": "Multiplying both sides of `|k| \u2265 1` by `|a|` (which is positive from step:a_nonzero), preserves the inequality.",
                "calculation": {
                  "calculation_sequence": [
                    "|k| \u2265 1",
                    "|a||k| \u2265 |a| * 1",
                    "|a||k| \u2265 |a|"
                  ]
                }
              }
            ]
          },
          {
            "type": "LogicalStepSequence",
            "items": [
              {
                "type": "conclude_statement",
                "claim": "From step:abs_product, we know `|b| = |a||k|`. Combining this with `|a||k| \u2265 |a|` from step:final_ineq, we can conclude that `|b| \u2265 |a|`, or equivalently, `|a| \u2264 |b|`. This completes the proof."
              }
            ]
          }
        ],
        "claim_label": "thm:divisor_magnitude"
      }
    ]
  },
  "greedy": false,
  "declarations": [
    "Int.dvd",
    "Int.dvd_of_abs_le_of_dvd"
  ]
}