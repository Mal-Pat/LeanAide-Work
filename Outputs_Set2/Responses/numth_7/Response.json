{
  "top_code": "import Mathlib\nimport LeanAide.AutoTactic\nimport LeanAide.Syntax\nuniverse u v w u_1 u_2 u_3 u\u2081 u\u2082 u\u2083\nset_option maxHeartbeats 10000000\nset_option linter.unreachableTactic false\n",
  "task": "lean_from_json_structured",
  "result": "success",
  "lean_code": "  def Int.dvd : \u2124 \u2192 \u2124 \u2192 Prop := fun x y => \u2203 k : \u2124, y = x * k\n  abbrev Int.dvd_add.prop : Prop :=\n    \u2200 {a b c : \u2124}, a \u2260 0 \u2192 a \u2223 b \u2192 a \u2223 c \u2192 a \u2223 b + c\n  theorem Int.dvd_add : \u2200 {a b c : \u2124}, a \u2260 0 \u2192 a \u2223 b \u2192 a \u2223 c \u2192 a \u2223 b + c :=\n    by\n    intro b c a_1 a_2 a_3\n    simp_all only [ne_eq]\n    sorry",
  "json_structured": {
    "document": [
      {
        "type": "Definition",
        "label": "def:divisibility",
        "header": "Definition",
        "definition": "An integer `x` divides an integer `y` (denoted `x | y`) if and only if there exists an integer `k` such that `y = xk`."
      },
      {
        "type": "Theorem",
        "label": "thm:divides_sum",
        "hypothesis": [
          {
            "variable_type": "integer",
            "variable_name": "a",
            "type": "let_statement",
            "properties": "a non-zero integer"
          },
          {
            "variable_type": "integer",
            "variable_name": "b",
            "type": "let_statement",
            "properties": "an integer"
          },
          {
            "variable_type": "integer",
            "variable_name": "c",
            "type": "let_statement",
            "properties": "an integer"
          },
          {
            "type": "assume_statement",
            "assumption": "a divides b (a | b)"
          },
          {
            "type": "assume_statement",
            "assumption": "a divides c (a | c)"
          }
        ],
        "header": "Theorem",
        "claim": "Then a divides their sum (b + c)."
      },
      {
        "type": "Proof",
        "proof_steps": [
          {
            "type": "LogicalStepSequence",
            "items": [
              {
                "variable_type": "integer",
                "variable_name": "a",
                "type": "let_statement",
                "properties": "Let `a` be an arbitrary non-zero integer."
              },
              {
                "variable_type": "integer",
                "variable_name": "b",
                "type": "let_statement",
                "properties": "Let `b` be an arbitrary integer."
              },
              {
                "variable_type": "integer",
                "variable_name": "c",
                "type": "let_statement",
                "properties": "Let `c` be an arbitrary integer."
              },
              {
                "type": "assume_statement",
                "label": "hyp:a_div_b",
                "assumption": "a divides b (a | b)"
              },
              {
                "type": "assume_statement",
                "label": "hyp:a_div_c",
                "assumption": "a divides c (a | c)"
              }
            ]
          },
          {
            "type": "LogicalStepSequence",
            "items": [
              {
                "variable_name": "k",
                "variable_kind": "integer",
                "type": "some_statement",
                "results_used": [
                  {
                    "target_identifier": "def:divisibility",
                    "statement": "By the definition of divisibility (def:divisibility)"
                  }
                ],
                "properties": "such that `b = ak`.",
                "internal_references": [
                  {
                    "target_identifier": "hyp:a_div_b"
                  }
                ]
              },
              {
                "variable_name": "m",
                "variable_kind": "integer",
                "type": "some_statement",
                "results_used": [
                  {
                    "target_identifier": "def:divisibility",
                    "statement": "By the definition of divisibility (def:divisibility)"
                  }
                ],
                "properties": "such that `c = am`.",
                "internal_references": [
                  {
                    "target_identifier": "hyp:a_div_c"
                  }
                ]
              }
            ]
          },
          {
            "type": "LogicalStepSequence",
            "items": [
              {
                "type": "assert_statement",
                "results_used": [
                  {
                    "statement": "Substitution of `b = ak`"
                  },
                  {
                    "statement": "Substitution of `c = am`"
                  },
                  {
                    "statement": "Distributive property of multiplication over addition"
                  }
                ],
                "label": "step:sum_expression",
                "claim": "The sum `b + c` can be expressed by substituting the forms of `b` and `c`.",
                "calculation": {
                  "calculation_sequence": [
                    "b + c",
                    "= ak + am",
                    "= a(k + m)"
                  ]
                }
              }
            ]
          },
          {
            "type": "LogicalStepSequence",
            "items": [
              {
                "variable_type": "integer",
                "variable_name": "p",
                "value": "k + m",
                "type": "let_statement",
                "properties": "Since `k` and `m` are both integers, their sum `p = k + m` is also an integer, as the set of integers is closed under addition."
              }
            ]
          },
          {
            "type": "LogicalStepSequence",
            "items": [
              {
                "type": "assert_statement",
                "results_used": [
                  {
                    "statement": "From step:sum_expression and the definition of p"
                  }
                ],
                "claim": "Thus, `b + c = ap`."
              }
            ]
          },
          {
            "type": "LogicalStepSequence",
            "items": [
              {
                "type": "conclude_statement",
                "claim": "Since we have shown that `b + c` can be written in the form `ap` for some integer `p`, by the definition of divisibility (def:divisibility), it follows that `a` divides `b + c`. This completes the proof."
              }
            ]
          }
        ],
        "claim_label": "thm:divides_sum"
      }
    ]
  },
  "greedy": false,
  "declarations": [
    "Int.dvd",
    "Int.dvd_add"
  ]
}